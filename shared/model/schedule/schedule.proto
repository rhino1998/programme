syntax = "proto3";

package shared.model.schedule;

import "shared/model/routes/routes.proto";

option go_package = "github.com/rhino1998/programme/backend/lib/model/schedule";

message Day {
  // optional  Weather weather = 1;

  int64 datetime = 1; // start of day
  repeated Task tasks = 2;
  oneof weather {
    bool weather_null = 12;
    // Weather weather_value =13;
  }

  oneof traffic {
    bool traffic_null = 14;
    // Traffic  traffic_value =15;
  }
}

enum TaskType {
  Unknown = 0; Floating = 1; Scheduled = 2; Calendar = 3; Free = 4; Travel = 5;
}

message Task {
  TaskType task_type = 1;
  string name = 2;
  string description = 3;
  int64 duration = 4;
  int64 stress = 5;

  // Coord location = 4;
  oneof deadline {
    bool deadline_null = 8;
    int64 deadline_value = 9;
  }

  oneof start {
    bool start_null = 10;
    int64 start_value = 11;
  }

  oneof travel_method {
    bool travel_method_null = 12;
    shared.model.routes.TravelMethod travel_method_value = 13;
  }

  oneof location {
    bool location_null = 14;
    shared.model.routes.Location location_value = 15;
  }
}

message NewTaskRequest {
  string user = 1;
  Task task = 2;
}

message Boolean { bool boolean = 1; }

service TaskManager { rpc AddTask(NewTaskRequest) returns(Boolean); }
